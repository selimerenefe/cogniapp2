<!DOCTYPE html>
<html>
<head>
<style type="text/css">
/* Set the background color of the page to light gray */
body {
  font-family: 'DM Sans', sans-serif;
  background-color: #f7f7f7;
}
/* Make the chatbot container fill the entire screen */
.chatbot-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  padding: 20px;
  box-sizing: border-box;
}
}

.chatbot-container {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  padding: 1rem;
  border: 1px solid #000;
  border-radius: 0.5rem;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.chatbot-header {
  margin-bottom: 1rem;
}

.chatbot-header h1 {
  font-size: 2rem;
  font-weight: 500;
}
.chatbot-messages {
  height: 400px;
  overflow-y: scroll;
}

.chatbot-message {
  display: inline-block;
  max-width: 70%;
  margin-bottom: 10px;
  padding: 8px;
  border-radius: 15px;
}

.user {
  background-color: #fff;
  color: #000;
  text-align: right;
  float: right;
  clear: both;
}

.cogni {
  background-color: #000;
  color: #fff;
  text-align: left;
  float: left;
  margin-top: 20px;

}


.chatbot-form {
  display: flex;
  margin-top: 1rem;
}

.chatbot-form input[type="text"] {
  flex-grow: 1;
  padding: 0.5rem;
  border: none;
  border-radius: 0.5rem;
}

.chatbot-form button[type="submit"] {
  padding: 0.5rem 1rem;
  background-color: #000;
  color: #fff;
  border: none;
  border-radius: 0.5rem;
  margin-left: 0.5rem;
  cursor: pointer;
}
</style>
  <meta charset="UTF-8">
  <title>Cogni Chatbot</title>
  <link rel="stylesheet" href="style.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap">
</head>
<body>
  <div class="chatbot-container">
    <div class="chatbot-header">
      <h1>Cogni Chatbot</h1>
    </div>
    <div class="chatbot-messages"></div>
    <form class="chatbot-form">
      <input type="text" placeholder="Type your message here...">
      <button type="submit">Send</button>
    </form>
  </div>
    <script>
    // Get the chatbot form, input, and messages container
const form = document.querySelector('.chatbot-form');
const input = document.querySelector('.chatbot-form input[type="text"]');
const messagesContainer = document.querySelector('.chatbot-messages');

// Create a function to add a message to the messages container
function addMessage(message, sender) {
  const messageElem = document.createElement('div');
  messageElem.classList.add('chatbot-message', sender);
  const messageText = document.createElement('p');
  messageText.textContent = message;
  messageElem.appendChild(messageText);
  messagesContainer.appendChild(messageElem);
  messagesContainer.scrollTop = messagesContainer.scrollHeight;

  // Set the message width based on the text content
  messageElem.style.width = messageText.getBoundingClientRect().width + '3px';
}

// Create a function to handle the form submission
function handleFormSubmit(e) {
  e.preventDefault();
  const message = input.value.trim();
  if (!message) return;
  addMessage(message, 'user');
  input.value = '';
  getCogniResponse(message);
}

// Create a function to get a response from the Cogni API
async function getCogniResponse(message) {
  const response = await fetch('https://api.openai.com/v1/completions', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer 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' 
    },
    body: JSON.stringify({
      model: 'text-davinci-003',
      prompt: "The chatbot called Cogni. Cogni is a personalized plan to achieve your goals. It will first prompt you to ask you about your goal will ask personalized follow up questions until it truly understands what your goal is. For example, if the user's goal is to become rich, it will respond something like this: Great! What do you mean by \"rich\"? Do you have a specific amount of money in mind? How much time do you have to achieve this goal? What resources do you have available to help you reach your goal? It will then generate a customized daily plan based on the user's goal and answers to the follow-up questions. Here is an example conversation between a user and cogni: User: My goal is to get a raise at work. Cogni Great! How much of a raise are you looking to get, and by when? User I'm looking to get a 10% raise by the end of the year. Cogni Okay, what have you done so far to work towards this goal? User: I've been doing my job well and taking on additional responsibilities, but I'm not sure what else I can do. Cogni I see. Have you spoken to your manager about your desire for a raise? User No, I haven't. I'm not sure how to bring it up. Cogni: I can help with that. Let's come up with a plan. First, let's work on increasing your visibility and impact in the company. Can you take on any new projects or initiatives that will show your value to the company? User Yes, I can start working on a new project that will save the company money. Cogni: Great! Let's also work on building your case for a raise. Can you gather data on how your work has contributed to the company's success, such as revenue or cost savings? User: Yes, I can gather that information. Cogni:  Perfect. Lastly, let's work on your approach to the conversation with your manager. I can help you draft an email or prepare talking points for a meeting. And remember, it's important to be confident and advocate for your worth. User  Thanks, Cogni. I feel more prepared to work towards my goal now. Cogni: You're welcome! Remember to keep me updated on your progress and let me know if you have any questions or concerns along the way. Remember that Cogni should be supportive and encouraging but at the same time should provide honest feedback to the user and be realistic. In addition, it should tell you what skills you need to achieve that goal. Cogni should be cheerful, funny, and very optimistic.\n\nHuman: " + message + "\nCogni: ",
      temperature: 0.9,
      max_tokens: 200,
      top_p: 1,
      frequency_penalty: 0,
      presence_penalty: 0,
      stop: ['User:', 'Cogni:']
    })
  });
  const data = await response.json();
  const cogniResponse = data.choices[0].text.trim();
  addMessage(cogniResponse, 'cogni');
}


// Add an event listener to the form for form submission
form.addEventListener('submit', handleFormSubmit);

  </script>
</body>
</html>
